# -*- coding: utf-8 -*-
"""Login_NumberPlate.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1JASEb9bs3eHUL3ffc6q40PcXbPXe4rSz
"""

import ipywidgets as widgets
from IPython.display import display, clear_output
import mysql.connector
from mysql.connector import Error
import ipywidgets as widgets
from IPython.display import display
import pandas as pd
from datetime import datetime

def mainpage(cid):
    clear_output()
    print("Welcome To Number Plate Addition")
    def add_user_details_manual(name, np, pno,cid):
        if name=='' or np=='' or pno=='':
                print("All fields Mandatory")
                return
        try:
            connection = mysql.connector.connect(
                host="localhost",
                user="root",
                password="1234",
                database="numberplate"
            )

            if connection.is_connected():
                print("Connected to MySQL database")

            cursor = connection.cursor()
            insert_query = "INSERT INTO numberplate (number_plate, name, companyid, date_added, phone_no) VALUES (%s, %s, %s, %s, %s)"
            current_date = datetime.now().date()
            dynamic_values = (np, name, cid, current_date, pno)

            cursor.execute(insert_query, dynamic_values)
            connection.commit()
            print('Details added successfully')
            name_input.value, np_input.value, pno_input.value = '', '', ''

        except mysql.connector.Error as error:
            print("Error while connecting to MySQL:", error)
        except Exception as e:
                print("An unexpected error occurred:", e)
                return
        finally:
            if 'connection' in locals() and connection.is_connected():
                cursor.close()
                connection.close()
                print("MySQL connection is closed")

    # Function to handle uploading details in bulk using Excel
    def upload_bulk_details(file,cid):
        # Read the Excel file
        df = pd.read_excel(file)
        # Process the details here, you can store them in a database or perform any other operation
        print('1')
        for index, row in df.iterrows():
            try:
                # Establishing a connection to the MySQL database
                connection = mysql.connector.connect(
                    host="localhost",
                    user="root",
                    password="1234",
                    database="numberplate"
                )

                if connection.is_connected():
                    print("Connected to MySQL database")

                cursor = connection.cursor()

                insert_query = "INSERT INTO numberplate (number_plate, name, companyid, date_added, phone_no) VALUES (%s, %s, %s, %s, %s)"

                current_date = datetime.now().date()

                dynamic_values = (row["No. Plate"], row["Name"], cid, current_date, row["Phone No."])

                cursor.execute(insert_query, dynamic_values)
                connection.commit()
                print('Details added successfully')
            except mysql.connector.Error as error:
                print("Error while connecting to MySQL:", error)
            except Exception as e:
                print("An unexpected error occurred:", e)
                return
            finally:
                # Closing cursor and connection
                if 'connection' in locals() and connection.is_connected():
                    cursor.close()
                    connection.close()
                    print("MySQL connection is closed")

    # Creating input widgets for adding user details manually
    name_input = widgets.Text(description="Name:")
    np_input = widgets.Text(description="No. Plate:")
    pno_input = widgets.Text(description="Phone No.:")
    add_button = widgets.Button(description="Add  Details")
    log_out = widgets.Button(description="Logout")
    #cid="TCS"

    # Creating input widgets for uploading details in bulk using Excel
    upload_button = widgets.FileUpload(accept='.xls,.xlsx', description="Upload Excel")

    # Function to handle button click for adding user details manually
    def add_button_clicked(b):
        add_user_details_manual(name_input.value, np_input.value, pno_input.value,cid)
    def logout_button_clicked(b):
        login_pg()
    add_button.on_click(add_button_clicked)
    log_out.on_click(logout_button_clicked)

    # Function to handle button click for uploading details in bulk using Excel
    def upload_button_clicked(change):
         for filename in change['new']:
            upload_bulk_details(filename['name'],cid)

    upload_button.observe(upload_button_clicked, names='value')

    # Displaying the widgets
    manual_input_box = widgets.VBox([name_input, np_input, pno_input, add_button,log_out])
    bulk_upload_box = widgets.VBox([upload_button,log_out])
    tab_contents = ['Manual Input', 'Bulk Upload']
    children = [manual_input_box, bulk_upload_box]
    tab = widgets.Tab()
    tab.children = children
    for i in range(len(children)):
        tab.set_title(i, tab_contents[i])
    display(tab)

def on_button_clicked(b):
    text1 = id.value
    text2 = passw.value
    connection = mysql.connector.connect(
    host="localhost",
    user="root",
    password="1234",
    database="numberplate")
    cursor = connection.cursor()
    select_query = """
    SELECT *
    FROM company_master
    where company_id=%s
    and password=%s;
    """
    values = (text1,text2)
    cursor.execute(select_query,values )
    # Fetch the results
    results = cursor.fetchall()
    if len(results)==1:
        print("Welcome To Number Plate Addition")
        mainpage(text1)
    else:
        print("Invalid Login Credentials")
def login_pg():
    clear_output()
    id=widgets.Text(
        placeholder='Enter Company ID',
        description='Company ID:',
        disabled=False
    )
    passw=widgets.Password(
        placeholder='Enter password',
        description='Password:',
        disabled=False
    )
    button = widgets.Button(
        description='Login',
        disabled=False,
        button_style='', # 'success', 'info', 'warning', 'danger' or ''
        tooltip='Click me',
    )
    button.on_click(on_button_clicked)

    display(id)
    display(passw)
    display(button)
login_pg()

connection = mysql.connector.connect(
    host="localhost",
    user="root",
    password="",
    database="numberplate")
cursor = connection.cursor()
select_query = """
    SELECT *
    FROM numberplate
    """
cursor.execute(select_query )
    # Fetch the results
results = cursor.fetchall()
print(results)

